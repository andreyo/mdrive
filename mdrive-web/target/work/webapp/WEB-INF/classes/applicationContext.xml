<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans.xsd
                http://www.springframework.org/schema/context
                http://www.springframework.org/schema/context/spring-context.xsd




                http://www.springframework.org/schema/tx
                http://www.springframework.org/schema/tx/spring-tx.xsd"
       default-autowire="byName">

    <context:property-placeholder location="classpath:db/jdbc.properties"/>

    <!--<context:annotation-config/>-->

    <context:component-scan base-package="mdrive.business">
        <!--<context:include-filter type="annotation"-->
        <!--expression="org.aspectj.lang.annotation.Aspect" />-->
    </context:component-scan>

    <!--<context:spring-configured/>-->

    <!--
        This marker creates the full auto-proxy infrastructure
        that is necessary for applying Spring's Transactional annotation.
        By default, it will refer to the transaction manager bean named "transactionManager".
    -->
    <tx:annotation-driven/>

    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory" ref="sessionFactory"/>
    </bean>

    <bean id="dataSource"
          class="org.springframework.jdbc.datasource.DriverManagerDataSource">
        <property name="driverClassName" value="${jdbc.driverClassName}"/>
        <property name="url" value="${jdbc.url}"/>
        <property name="username" value="${jdbc.username}"/>
        <property name="password" value="${jdbc.password}"/>
    </bean>

    <bean id="sessionFactory"
          class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="namingStrategy">
            <bean class="org.hibernate.cfg.DefaultComponentSafeNamingStrategy"/>
        </property>
        <property name="packagesToScan">
            <list>
                <value>mdrive/business/*</value>
            </list>
        </property>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.show_sql">${hibernate.show_sql}</prop>
                <prop key="hibernate.hbm2ddl.auto">${hibernate.hbm2ddl.auto}</prop>

                <prop key="hibernate.c3p0.min_size">5</prop>
                <prop key="hibernate.c3p0.max_size">20</prop>
                <prop key="hibernate.c3p0.timeout">1800</prop>
                <prop key="hibernate.c3p0.max_statements">50</prop>
            </props>
        </property>
    </bean>

    <!-- setup wicket application -->
    <bean id="wicketApplication" class="mdrive.app.MApplication"/>

    <!--load test database-->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetObject">
            <ref bean="DBUnitDataLoaderImpl"/>
        </property>
        <property name="targetMethod">
            <!--<value>initTestDataXml</value>-->
            <value>initTestDataCsv</value>
        </property>
    </bean>
</beans>